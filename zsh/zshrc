############################################################
# zshrc
#
# vim: foldmethod=marker
#
# Maintainer: Hiroyuki Tanaka <hryktnk@gmail.com>
# License: Public Domain
############################################################

# oh-my-zsh {{{
# Not to overwrite prefered conifg
[ -n $ZSH ] && source $ZSH/oh-my-zsh.sh
# }}}
## path {{{
# On MacOS, PATH is updated by /usr/libexec/path_helper after loading .zshenv
# so PATH is configured here.
local path_candidates=(
  ${HOME}/.deno/bin
  ${HOME}/.rbenv/bin
  ${HOME}/.pyenv/bin
  ${HOME}/.nodenv/bin
  ${GOPATH}/bin
  /opt/homebrew/bin
  /opt/homebrew/sbin
  /usr/local/bin
  /usr/local/sbin
  /usr/bin
  /usr/sbin
  /bin
  /sbin
  /usr/games
  /usr/local/games
  /snap/bin
)

local user_path

for d in ${path_candidates}; do
  if [ -d "${d}" ]; then
    user_path="${user_path}:${d}"
  fi
done
PATH=${user_path}:$PATH
# }}}
## history {{{
HISTFILE=~/.zhistory
SAVEHIST=5000
HISTSIZE=5000
# }}}
## functions {{{
autoload -Uz compinit && compinit

autoload -Uz colors && colors

autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
# }}}
## alias {{{
case "${OSTYPE}" in
  darwin*)
    lscommand="gls -F --color=auto -v --quoting-style=literal"
  ;;
  linux*|cygwin)
    lscommand="ls -F --color=auto -v"
  ;;
esac
alias ls="$lscommand"
alias	la="$lscommand -a"
alias	ll="$lscommand -l"

alias less="less -R"

alias	j=jobs

alias mv='nocorrect mv'
alias cp='nocorrect cp'
alias scp='nocorrect scp'
alias mkdir='nocorrect mkdir'

alias vi='vim'

alias ssh='ssh -Y'

alias grep='grep --color=always'

alias tmux='tmux -u'

case "${OSTYPE}" in
  darwin*)
  alias gvim='open -a macvim'
  ;;
esac
# }}}
## global alias {{{
alias -g L='|less -R'
alias -g M='|more'
alias -g H='|head'
alias -g T='|tail'
alias -g G='|grep'
alias -g GI='|grep -i'
# }}}
## suffix alias {{{
alias -s rb=ruby

case "${OSTYPE}" in
  cygwin)
    alias -s html="cygstart firefox"
    ;;
esac
# }}}
## color {{{
case "${OSTYPE}" in
  darwin*)
    [ -r ~/.dir_colors ] && eval `gdircolors ~/.dir_colors`
  ;;
  linux*|cygwin)
    [ -r ~/.dir_colors ] && eval `dircolors ~/.dir_colors`
  ;;
esac
## }}}
## prompt {{{
function git_repo_info() {
  local branch=$(git branch --show-current 2> /dev/null)

  if [[ -z "${branch}" ]]; then
    return
  fi

  local status_symbol=""
  local gs=`git status 2> /dev/null`

  if [[ -n `echo "${gs}" | grep "^Changes not staged for commit"` ]]; then
    status_symbol="*"
  elif [[ -n `echo "${gs}" | grep "^Changes to be committed"` ]]; then
    status_symbol="+"
  fi

  echo '- ('${branch}${status_symbol}')'
}

case ${UID} in 
0)
  PROMPT="%j [%{${fg[cyan]}%}%U%m%{${reset_color}%}:%~%u]% %E
%h%{${fg[red]}%}%#>%{${reset_color}%}"
  PROMPT2="%{${fg[red]}%}%_->%{${reset_color}%}"
  ;;
*)
  PROMPT='%j [%F{020}%K{190}%U%m%{${reset_color}%}%k%f:%~%u]% %E %{${fg[yellow]}%}$(git_repo_info)%{${reset_color}%}
%h%#>'
  PROMPT2="%_->"
  ;;
esac

RPROMPT=''

# }}}
## options {{{
##  history {{{
setopt hist_no_store # do not store history command
setopt hist_ignore_dups # ignore if same as the previous command
setopt hist_ignore_space
setopt hist_reduce_blanks # remove unnecessary spaces
setopt hist_save_no_dups
setopt inc_append_history # add history incrementally
setopt no_share_history # do not share history among terminals
unsetopt share_history
setopt append_history
# }}}
##  directory {{{
setopt auto_cd
setopt auto_pushd
# }}}
##  complement {{{
setopt list_packed
setopt list_types
setopt complete_aliases
setopt auto_param_keys
setopt magic_equal_subst
# }}}
##  file name and glob {{{
setopt extended_glob
setopt numeric_glob_sort
unsetopt nomatch
# }}}
## input/output {{{
setopt correct
setopt clobber
setopt correct_all
setopt ignore_eof
unsetopt flow_control
# }}}
## jobs {{{
setopt auto_resume
# }}}
## others {{{
setopt no_beep
setopt no_list_beep
setopt promptcr
setopt print_eight_bit
# }}}
# }}}
## bind key {{{
bindkey -e
bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end 
# }}}
## completion in sudo {{{
zstyle ':completion:*:sudo:*' command-path\
  /usr/local/sbin /usr/local/bin /usr/sbin /usr/bin /sbin /bin
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
## }}}
## terminal title {{{
case "${TERM}" in
  kterm*|xterm*)
    if [[ -n $STY ]]; then  ## screen
      preexec(){
        print -Pn "\ek$1\e\\"  ## window title (latest command)
      }
      precmd(){
        ## title on terminal
        print -Pn "\033P\033]0;@${HOST%%.*}:${PWD}\007\033\\"
      }
    else
    precmd(){
      print -Pn "\e]0;@${HOST%%.*}:${PWD}\a"
    }
    fi
    ;;
  screen*)
    preexec(){
      print -Pn "\ek$1\e\\"  ## window title (latest command)
    }
    precmd(){
      ## title on terminal
      #printf "\033P\033]0;@${HOST%%.*}:${PWD}\007\033\\"
      print -Pn "\e]0;@${HOST%%.*}:${PWD}\a"
    }
    ;;
esac
# }}}
## others {{{
## default permissions
umask 022
# }}}
## rbenv {{{
[ -d ~/.rbenv ] && eval "$(~/.rbenv/bin/rbenv init - )"
# }}}
## pyenv {{{
[ -d ~/.pyenv ] && eval "$(pyenv init - --no-rehash)"
# }}}
## goenv {{{
if [[ -d "${GOENV_ROOT}" ]]; then
  eval "$(goenv init - --no-rehash)"
fi
# }}}
## local setting {{{
[ -f ~/.zshrc.local ] && source ~/.zshrc.local
# }}}
## WSL {{{
if [[ "$(umask)" = "0000" ]]; then
  umask 0022
fi

start () {
  if [ -z "$1" ]; then
    /c/Windows/explorer.exe
  else
    /c/Windows/explorer.exe `wslpath -w "$1"`
  fi
}
# }}}
## ssh-agent {{{
run_ssh_agent() {
  local current_user=`whoami`
  local -a ssh_agent_pid
  ssh_agent_pid=(`pgrep -u ${current_user} -d " " ssh-agent`)

  if [[ -n ${ssh_agent_pid} ]]; then
    local ssh_agent_tmp

    for pid in ${ssh_agent_pid}; do
      ssh_agent_tmp=`find /tmp/ -name "agent.$(($pid - 1))" 2> /dev/null`

      if [[ -n ${ssh_agent_tmp} ]]; then
        export SSH_AUTH_SOCK=${ssh_agent_tmp}
        export SSH_AGENT_PID=${pid}

        echo SSH_AUTH_SOCK=${SSH_AUTH_SOCK}
        echo SSH_AGENT_PID=${SSH_AGENT_PID}

        break;
      fi
    done

    echo "${ssh_agent_tmp}"
    if [[ -z "${ssh_agent_tmp}" ]]; then
      eval `ssh-agent -s`
    fi
  else
    eval `ssh-agent -s`
  fi
}
# }}}
## docker {{{
docker-rm-exited() {
  docker ps -a -f status=exited -q | xargs -r docker rm
}

docker-rmi-none() {
  docker images -f dangling=true -q | xargs -r docker rmi
}
# }}}
## typeset {{{
# Clean up the environmental variable, that might be messed up by apple's path_helper
typeset -U path cdpath fpath manpath
# }}}
